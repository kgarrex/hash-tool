; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27032.1 

	TITLE	H:\Dev\hash-tool\hash-tool.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_spaces:BYTE:0100H
COMM	_linebuffer:BYTE:0100H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfwprintf_l
PUBLIC	_wprintf
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_RtlInitUnicodeString@8
PUBLIC	@hash_djb2_32@12
PUBLIC	@hash_sdbm_32@12
PUBLIC	_hash_loseLose
PUBLIC	@hash_wakkerbot_32@12
PUBLIC	@fnv1_32@12
PUBLIC	@fnv1_64@12
PUBLIC	@hashb_jenkins1_1@12
PUBLIC	@hashb_jenkins1_2@12
PUBLIC	@hash_rs_32@8
PUBLIC	@hash_pjw_32@8
PUBLIC	_RunTest
PUBLIC	_test_hash_value_equality
PUBLIC	_test_hash_value_reentry_equality
PUBLIC	_foreach_line
PUBLIC	_first_pass
PUBLIC	_second_pass
PUBLIC	_windows_register_com_object
PUBLIC	_mem_alloc_aligned
PUBLIC	_mem_alloc_unaligned
PUBLIC	_create_pool_factory
PUBLIC	_bk_pool_create
PUBLIC	_bk_destroy_pool
PUBLIC	_bk_alloc
PUBLIC	_main
PUBLIC	??_C@_04OIKJMBFP@TEST@				; `string'
PUBLIC	??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@ ; `string'
PUBLIC	??_C@_0CM@JMKCLPKH@test_hash_value_reentry_equalit@ ; `string'
PUBLIC	??_C@_0BD@LBIACFDM@?5?$HM?5?$CFu?5?$HM?50x?$CFp?5?$HM?5?$CFu?6@ ; `string'
PUBLIC	??_C@_04EBNJJJJI@?$CF?4?$CKs@			; `string'
PUBLIC	??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@ ; `string'
PUBLIC	??_C@_0BP@DNDKCCKF@Status?3?50x?$CFx?6Key?5Handle?3?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@		; `string'
PUBLIC	??_C@_0BH@OEGPOLCA@NtQueryValueKey?3?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_1BI@FMNPLDCI@?$AAD?$AAa?$AAt?$AAa?$AA?3?$AA?5?$AA?$CF?$AA?4?$AA?$CK?$AAs?$AA?6@ ; `string'
PUBLIC	??_C@_0P@EJBNOLOH@pool_size?3?5?$CFu?6@		; `string'
PUBLIC	??_C@_0BP@KJLECNDD@NtAllocateVirtualMemory?3?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_0BL@IGHJCLMM@NtFreeVirtualMemory?3?50x?$CFx?6@ ; `string'
PUBLIC	??_C@_0BB@JKFJNEBL@NUMBER?3?5?$CFu?5?$HM?5?$CFu?6@ ; `string'
PUBLIC	??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@ ; `string'
PUBLIC	??_C@_0BC@KDMCBPFK@FileHandle?3?50x?$CFp?6@	; `string'
PUBLIC	??_C@_0BE@PNKMIFLE@NtCreateFile?3?50x?$CFx?6@	; `string'
PUBLIC	??_C@_0BD@OOAADBBF@Disposition?3?50x?$CFu?6@	; `string'
PUBLIC	??_C@_0M@KPLPPDAC@Hello?5World@			; `string'
PUBLIC	??_C@_0BD@NADDFABL@NtWriteFile?3?50x?$CFx?6@	; `string'
PUBLIC	??_C@_0BE@HMEGABFL@NtDeleteFile?3?50x?$CFx?6@	; `string'
PUBLIC	??_C@_0CB@NDHKNEAK@Error?3?5File?5Could?5not?5be?5opened@ ; `string'
PUBLIC	??_C@_0BC@KHCMAJHO@Filename?$CI?$CFu?$CJ?3?5?$CFs?6@ ; `string'
PUBLIC	??_C@_0CO@BFJGHJDJ@Error?$CI?$CFd?$CJ?3?5File?5Mapping?5could?5n@ ; `string'
PUBLIC	??_C@_0CD@PDNLIEDD@Error?3?5Could?5not?5map?5view?5of?5fi@ ; `string'
PUBLIC	??_C@_0BG@IFOMCKAN@Max?3?5?$CFu?5?5?$HM?5Count?3?5?$CFu?6@ ; `string'
PUBLIC	??_C@_0BC@BJFHNDLA@hashes?9output?4txt@		; `string'
PUBLIC	??_C@_0CC@CDPBNOBA@Error?3?5Could?5not?5create?5new?5fil@ ; `string'
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__GetFileSize@8:PROC
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__GetLastError@0:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__CreateFileMappingA@24:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfwprintf:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	@hashb_djb2@12:PROC
EXTRN	@hashb_sdbm@12:PROC
EXTRN	@hashb_wakkerbot@12:PROC
EXTRN	_NtCurrentProcess@0:PROC
EXTRN	_NtCreateFile@44:PROC
EXTRN	_NtWriteFile@36:PROC
EXTRN	_NtDeleteFile@4:PROC
EXTRN	_NtClose@4:PROC
EXTRN	_NtAllocateVirtualMemory@24:PROC
EXTRN	_NtFreeVirtualMemory@16:PROC
EXTRN	_NtOpenKey@12:PROC
EXTRN	_NtQueryValueKey@24:PROC
EXTRN	@next_pow2@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
?factory@?1??create_pool_factory@@9@9 DB 0408H DUP (?)	; `create_pool_factory'::`2'::factory
_BSS	ENDS
;	COMDAT ??_C@_0CC@CDPBNOBA@Error?3?5Could?5not?5create?5new?5fil@
CONST	SEGMENT
??_C@_0CC@CDPBNOBA@Error?3?5Could?5not?5create?5new?5fil@ DB 'Error: Coul'
	DB	'd not create new file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BJFHNDLA@hashes?9output?4txt@
CONST	SEGMENT
??_C@_0BC@BJFHNDLA@hashes?9output?4txt@ DB 'hashes-output.txt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IFOMCKAN@Max?3?5?$CFu?5?5?$HM?5Count?3?5?$CFu?6@
CONST	SEGMENT
??_C@_0BG@IFOMCKAN@Max?3?5?$CFu?5?5?$HM?5Count?3?5?$CFu?6@ DB 'Max: %u  |'
	DB	' Count: %u', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PDNLIEDD@Error?3?5Could?5not?5map?5view?5of?5fi@
CONST	SEGMENT
??_C@_0CD@PDNLIEDD@Error?3?5Could?5not?5map?5view?5of?5fi@ DB 'Error: Cou'
	DB	'ld not map view of file', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BFJGHJDJ@Error?$CI?$CFd?$CJ?3?5File?5Mapping?5could?5n@
CONST	SEGMENT
??_C@_0CO@BFJGHJDJ@Error?$CI?$CFd?$CJ?3?5File?5Mapping?5could?5n@ DB 'Err'
	DB	'or(%d): File Mapping could not be created', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KHCMAJHO@Filename?$CI?$CFu?$CJ?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0BC@KHCMAJHO@Filename?$CI?$CFu?$CJ?3?5?$CFs?6@ DB 'Filename(%u): %s'
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NDHKNEAK@Error?3?5File?5Could?5not?5be?5opened@
CONST	SEGMENT
??_C@_0CB@NDHKNEAK@Error?3?5File?5Could?5not?5be?5opened@ DB 'Error: File'
	DB	' Could not be opened', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HMEGABFL@NtDeleteFile?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BE@HMEGABFL@NtDeleteFile?3?50x?$CFx?6@ DB 'NtDeleteFile: 0x%x', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NADDFABL@NtWriteFile?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BD@NADDFABL@NtWriteFile?3?50x?$CFx?6@ DB 'NtWriteFile: 0x%x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KPLPPDAC@Hello?5World@
CONST	SEGMENT
??_C@_0M@KPLPPDAC@Hello?5World@ DB 'Hello World', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OOAADBBF@Disposition?3?50x?$CFu?6@
CONST	SEGMENT
??_C@_0BD@OOAADBBF@Disposition?3?50x?$CFu?6@ DB 'Disposition: 0x%u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PNKMIFLE@NtCreateFile?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BE@PNKMIFLE@NtCreateFile?3?50x?$CFx?6@ DB 'NtCreateFile: 0x%x', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KDMCBPFK@FileHandle?3?50x?$CFp?6@
CONST	SEGMENT
??_C@_0BC@KDMCBPFK@FileHandle?3?50x?$CFp?6@ DB 'FileHandle: 0x%p', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@
CONST	SEGMENT
??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@ DB '\'
	DB	00H, '?', 00H, '?', 00H, '\', 00H, '\', 00H, 'H', 00H, ':', 00H
	DB	'\', 00H, 'D', 00H, 'e', 00H, 'v', 00H, '\', 00H, 'h', 00H, 'a'
	DB	00H, 's', 00H, 'h', 00H, '-', 00H, 't', 00H, 'o', 00H, 'o', 00H
	DB	'l', 00H, '\', 00H, 'n', 00H, 'e', 00H, 'w', 00H, 'f', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, '1', 00H, '.', 00H, 't', 00H, 'x', 00H
	DB	't', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JKFJNEBL@NUMBER?3?5?$CFu?5?$HM?5?$CFu?6@
CONST	SEGMENT
??_C@_0BB@JKFJNEBL@NUMBER?3?5?$CFu?5?$HM?5?$CFu?6@ DB 'NUMBER: %u | %u', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IGHJCLMM@NtFreeVirtualMemory?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BL@IGHJCLMM@NtFreeVirtualMemory?3?50x?$CFx?6@ DB 'NtFreeVirtualMem'
	DB	'ory: 0x%x', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KJLECNDD@NtAllocateVirtualMemory?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BP@KJLECNDD@NtAllocateVirtualMemory?3?50x?$CFx?6@ DB 'NtAllocateVi'
	DB	'rtualMemory: 0x%x', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EJBNOLOH@pool_size?3?5?$CFu?6@
CONST	SEGMENT
??_C@_0P@EJBNOLOH@pool_size?3?5?$CFu?6@ DB 'pool_size: %u', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BI@FMNPLDCI@?$AAD?$AAa?$AAt?$AAa?$AA?3?$AA?5?$AA?$CF?$AA?4?$AA?$CK?$AAs?$AA?6@
CONST	SEGMENT
??_C@_1BI@FMNPLDCI@?$AAD?$AAa?$AAt?$AAa?$AA?3?$AA?5?$AA?$CF?$AA?4?$AA?$CK?$AAs?$AA?6@ DB 'D'
	DB	00H, 'a', 00H, 't', 00H, 'a', 00H, ':', 00H, ' ', 00H, '%', 00H
	DB	'.', 00H, '*', 00H, 's', 00H, 0aH, 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OEGPOLCA@NtQueryValueKey?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BH@OEGPOLCA@NtQueryValueKey?3?50x?$CFx?6@ DB 'NtQueryValueKey: 0x%'
	DB	'x', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@
CONST	SEGMENT
??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@ DB 'H', 00H, 'o', 00H, 's', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@DNDKCCKF@Status?3?50x?$CFx?6Key?5Handle?3?50x?$CFx?6@
CONST	SEGMENT
??_C@_0BP@DNDKCCKF@Status?3?50x?$CFx?6Key?5Handle?3?50x?$CFx?6@ DB 'Statu'
	DB	's: 0x%x', 0aH, 'Key Handle: 0x%x', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@
CONST	SEGMENT
??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@ DB '\'
	DB	00H, 'R', 00H, 'e', 00H, 'g', 00H, 'i', 00H, 's', 00H, 't', 00H
	DB	'r', 00H, 'y', 00H, '\', 00H, 'M', 00H, 'a', 00H, 'c', 00H, 'h'
	DB	00H, 'i', 00H, 'n', 00H, 'e', 00H, '\', 00H, 'S', 00H, 'O', 00H
	DB	'F', 00H, 'T', 00H, 'W', 00H, 'A', 00H, 'R', 00H, 'E', 00H, '\'
	DB	00H, 'B', 00H, 'l', 00H, 'u', 00H, 'e', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 'c', 00H, 'k', 00H, 's', 00H, '\', 00H, 'A', 00H, 'g'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '\', 00H, 'C', 00H, 'l', 00H
	DB	'o', 00H, 'u', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04EBNJJJJI@?$CF?4?$CKs@
CONST	SEGMENT
??_C@_04EBNJJJJI@?$CF?4?$CKs@ DB '%.*s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBIACFDM@?5?$HM?5?$CFu?5?$HM?50x?$CFp?5?$HM?5?$CFu?6@
CONST	SEGMENT
??_C@_0BD@LBIACFDM@?5?$HM?5?$CFu?5?$HM?50x?$CFp?5?$HM?5?$CFu?6@ DB ' | %u'
	DB	' | 0x%p | %u', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@JMKCLPKH@test_hash_value_reentry_equalit@
CONST	SEGMENT
??_C@_0CM@JMKCLPKH@test_hash_value_reentry_equalit@ DB 'test_hash_value_r'
	DB	'eentry_equality: %u == %u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
CONST	SEGMENT
??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@ DB 'test_'
	DB	'hash_value_equality: %u == %u', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OIKJMBFP@TEST@
CONST	SEGMENT
??_C@_04OIKJMBFP@TEST@ DB 'TEST', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_region_size$ = -76					; size = 4
_base_address$ = -72					; size = 4
_string$ = -68						; size = 8
_iosb$ = -60						; size = 8
_offset$ = -52						; size = 8
_data$ = -44						; size = 20
_oa$ = -24						; size = 24
_argc$ = 8						; size = 4
_FileHandle$ = 12					; size = 4
_argv$ = 12						; size = 4
_main	PROC						; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 493
	sub	esp, 76					; 0000004cH
	push	ebp
; Line 505
	push	256					; 00000100H
	push	32					; 00000020H
	push	OFFSET _spaces
	call	_memset
; Line 510
	mov	eax, DWORD PTR _argv$[esp+88]
; Line 520
	push	1081377					; 00108021H
	push	1081377					; 00108021H
	push	OFFSET ??_C@_0BB@JKFJNEBL@NUMBER?3?5?$CFu?5?$HM?5?$CFu?6@
	mov	ebp, DWORD PTR [eax+4]
	mov	DWORD PTR _data$[esp+112], 0
	mov	DWORD PTR _data$[esp+108], 71		; 00000047H
	mov	DWORD PTR _data$[esp+116], 0
	call	_printf
	xorps	xmm0, xmm0
; Line 524
	mov	DWORD PTR _FileHandle$[esp+100], 0
	add	esp, 24					; 00000018H
; Line 526
	movlpd	QWORD PTR _iosb$[esp+80], xmm0
; Line 528
	movlpd	QWORD PTR _offset$[esp+80], xmm0
; Line 255
	mov	ecx, OFFSET ??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@
$LL10@main:
; Line 256
	movzx	eax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL10@main
; Line 257
	sub	ecx, OFFSET ??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@
; Line 259
	mov	DWORD PTR _string$[esp+84], OFFSET ??_C@_1EG@EABAABDJ@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AA?2?$AAH?$AA?3?$AA?2?$AAD?$AAe?$AAv?$AA?2?$AAh?$AAa?$AAs@
	sar	ecx, 1
; Line 549
	push	0
	push	OFFSET ??_C@_0BC@KDMCBPFK@FileHandle?3?50x?$CFp?6@
	mov	DWORD PTR _oa$[esp+88], 24		; 00000018H
; Line 257
	lea	eax, DWORD PTR [ecx*2-2]
; Line 539
	mov	DWORD PTR _oa$[esp+92], 0
; Line 257
	mov	WORD PTR _string$[esp+88], ax
; Line 258
	mov	WORD PTR _string$[esp+90], ax
; Line 540
	lea	eax, DWORD PTR _string$[esp+88]
	mov	DWORD PTR _oa$[esp+96], eax
; Line 541
	mov	DWORD PTR _oa$[esp+100], 0
; Line 542
	mov	DWORD PTR _oa$[esp+104], 0
; Line 543
	mov	DWORD PTR _oa$[esp+108], 0
; Line 549
	call	_printf
	add	esp, 8
; Line 550
	lea	eax, DWORD PTR _iosb$[esp+80]
	push	0
	push	0
	push	64					; 00000040H
	push	3
	push	5
	push	128					; 00000080H
	push	0
	push	eax
	lea	eax, DWORD PTR _oa$[esp+112]
	push	eax
	push	1048579					; 00100003H
	lea	eax, DWORD PTR _FileHandle$[esp+116]
	push	eax
	call	_NtCreateFile@44
; Line 551
	test	eax, eax
	je	SHORT $LN2@main
; Line 552
	push	eax
	push	OFFSET ??_C@_0BE@PNKMIFLE@NtCreateFile?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
; Line 553
	xor	eax, eax
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
$LN2@main:
; Line 556
	push	DWORD PTR _FileHandle$[esp+76]
	push	OFFSET ??_C@_0BC@KDMCBPFK@FileHandle?3?50x?$CFp?6@
	call	_printf
; Line 557
	push	DWORD PTR _iosb$[esp+88]
	push	OFFSET ??_C@_0BD@OOAADBBF@Disposition?3?50x?$CFu?6@
	call	_printf
	add	esp, 16					; 00000010H
; Line 559
	lea	eax, DWORD PTR _offset$[esp+80]
	push	0
	push	eax
	push	11					; 0000000bH
	push	OFFSET ??_C@_0M@KPLPPDAC@Hello?5World@
	lea	eax, DWORD PTR _iosb$[esp+96]
	push	eax
	push	0
	push	0
	push	0
	push	DWORD PTR _FileHandle$[esp+108]
	call	_NtWriteFile@36
; Line 560
	test	eax, eax
	je	SHORT $LN3@main
; Line 561
	push	eax
	push	OFFSET ??_C@_0BD@NADDFABL@NtWriteFile?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
$LN3@main:
; Line 564
	push	esi
	push	DWORD PTR _FileHandle$[esp+80]
	call	_NtClose@4
; Line 566
	lea	eax, DWORD PTR _oa$[esp+84]
	push	eax
	call	_NtDeleteFile@4
; Line 567
	push	eax
	push	OFFSET ??_C@_0BE@HMEGABFL@NtDeleteFile?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
; Line 570
	mov	DWORD PTR _base_address$[esp+84], 0
; Line 572
	lea	eax, DWORD PTR _region_size$[esp+84]
	mov	DWORD PTR _region_size$[esp+84], 65536	; 00010000H
	push	4
	push	8192					; 00002000H
	push	eax
	push	0
	lea	eax, DWORD PTR _base_address$[esp+100]
	push	eax
	call	_NtCurrentProcess@0
	push	eax
	call	_NtAllocateVirtualMemory@24
; Line 573
	push	eax
	push	OFFSET ??_C@_0BP@KJLECNDD@NtAllocateVirtualMemory?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
; Line 575
	lea	eax, DWORD PTR _region_size$[esp+84]
	push	16384					; 00004000H
	push	eax
	lea	eax, DWORD PTR _base_address$[esp+92]
	push	eax
	call	_NtCurrentProcess@0
	push	eax
	call	_NtFreeVirtualMemory@16
; Line 576
	push	eax
	push	OFFSET ??_C@_0BL@IGHJCLMM@NtFreeVirtualMemory?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
; Line 130
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 4
	push	5381					; 00001505H
	call	@hashb_djb2@12
; Line 132
	push	eax
	push	2089275187				; 7c87cf33H
	push	OFFSET ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 130
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 4
	push	0
	call	@hashb_sdbm@12
; Line 132
	push	eax
	push	1720303922				; 6689c132H
	push	OFFSET ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 130
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 4
	push	0
	call	@hashb_wakkerbot@12
; Line 132
	push	eax
	push	-192746947				; f482ea3dH
	push	OFFSET ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 129
	xor	edx, edx
; Line 130
	xor	esi, esi
$LL61@main:
; File h:\dev\hash-tool\hash.c
; Line 71
	movsx	ecx, BYTE PTR ??_C@_04OIKJMBFP@TEST@[esi]
	mov	eax, edx
	shl	eax, 10					; 0000000aH
	inc	esi
	add	ecx, eax
	mov	eax, edx
	shr	eax, 6
	xor	ecx, eax
	add	edx, ecx
	cmp	esi, 4
	jne	SHORT $LL61@main
; Line 73
	mov	esi, edx
	mov	eax, edx
	shr	esi, 11					; 0000000bH
; File h:\dev\hash-tool\hash-tool.c
; Line 130
	xor	ecx, ecx
; File h:\dev\hash-tool\hash.c
; Line 73
	shl	eax, 15					; 0000000fH
	add	esi, eax
	lea	eax, DWORD PTR [edx*8]
	xor	esi, eax
	add	esi, edx
	xor	edx, edx
	npad	4
$LL63@main:
; Line 84
	movsx	eax, BYTE PTR ??_C@_04OIKJMBFP@TEST@[edx]
	inc	edx
; Line 85
	add	eax, ecx
	imul	ecx, eax, 1025
; Line 86
	mov	eax, ecx
	shr	eax, 6
	xor	ecx, eax
	cmp	edx, 4
	jne	SHORT $LL63@main
; Line 88
	lea	ecx, DWORD PTR [ecx+ecx*8]
; Line 89
	mov	eax, ecx
	shr	eax, 11					; 0000000bH
	xor	eax, ecx
; Line 90
	imul	eax, eax, 32769
; File h:\dev\hash-tool\hash-tool.c
; Line 132
	push	eax
	push	esi
	push	OFFSET ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 596
	mov	DWORD PTR _data$[esp+100], OFFSET @hash_sdbm_32@12
; Line 598
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	ebp
	call	DWORD PTR __imp__CreateFileA@28
	mov	esi, eax
; Line 599
	cmp	esi, -1
	jne	SHORT $LN4@main
; Line 600
	push	OFFSET ??_C@_0CB@NDHKNEAK@Error?3?5File?5Could?5not?5be?5opened@
	call	_printf
	add	esp, 4
; Line 601
	mov	eax, 1
	pop	esi
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
$LN4@main:
	push	edi
; Line 604
	push	0
	push	esi
	call	DWORD PTR __imp__GetFileSize@8
	mov	edi, eax
; Line 606
	push	ebp
	push	edi
	push	OFFSET ??_C@_0BC@KHCMAJHO@Filename?$CI?$CFu?$CJ?3?5?$CFs?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 609
	push	0
	push	0
	push	0
	push	2
	push	0
	push	esi
	call	DWORD PTR __imp__CreateFileMappingA@24
; Line 610
	test	eax, eax
	jne	SHORT $LN5@main
; Line 611
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET ??_C@_0CO@BFJGHJDJ@Error?$CI?$CFd?$CJ?3?5File?5Mapping?5could?5n@
	call	_printf
	add	esp, 8
; Line 612
	mov	eax, 2
	pop	edi
	pop	esi
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
$LN5@main:
; Line 615
	push	0
	push	0
	push	0
	push	4
	push	eax
	call	DWORD PTR __imp__MapViewOfFile@20
	mov	esi, eax
; Line 616
	test	esi, esi
	jne	SHORT $LN6@main
; Line 617
	call	DWORD PTR __imp__GetLastError@0
	push	eax
	push	OFFSET ??_C@_0CD@PDNLIEDD@Error?3?5Could?5not?5map?5view?5of?5fi@
	call	_printf
	add	esp, 8
; Line 618
	lea	eax, DWORD PTR [esi+3]
	pop	edi
	pop	esi
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
$LN6@main:
; Line 624
	lea	eax, DWORD PTR _data$[esp+88]
	push	eax
	push	OFFSET _first_pass
	push	edi
	push	esi
	call	_foreach_line
; Line 626
	push	DWORD PTR _data$[esp+116]
	push	DWORD PTR _data$[esp+116]
	push	OFFSET ??_C@_0BG@IFOMCKAN@Max?3?5?$CFu?5?5?$HM?5Count?3?5?$CFu?6@
	call	_printf
	add	esp, 28					; 0000001cH
; Line 629
	push	0
	push	128					; 00000080H
	push	4
	push	0
	push	0
	push	1073741824				; 40000000H
	push	OFFSET ??_C@_0BC@BJFHNDLA@hashes?9output?4txt@
	call	DWORD PTR __imp__CreateFileA@28
	mov	DWORD PTR _data$[esp+88], eax
; Line 630
	cmp	eax, -1
	jne	SHORT $LN7@main
; Line 631
	push	OFFSET ??_C@_0CC@CDPBNOBA@Error?3?5Could?5not?5create?5new?5fil@
	call	_printf
	add	esp, 4
; Line 632
	mov	eax, 1
	pop	edi
	pop	esi
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
$LN7@main:
; Line 636
	lea	eax, DWORD PTR _data$[esp+88]
	push	eax
	push	OFFSET _second_pass
	push	edi
	push	esi
	call	_foreach_line
	add	esp, 16					; 00000010H
; Line 641
	xor	eax, eax
	pop	edi
	pop	esi
	pop	ebp
; Line 642
	add	esp, 76					; 0000004cH
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bk_alloc
_TEXT	SEGMENT
_pool$ = 8						; size = 4
_bk_alloc PROC						; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 475
	xor	eax, eax
; Line 476
	ret	0
_bk_alloc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bk_destroy_pool
_TEXT	SEGMENT
_base$ = -4						; size = 4
_size$ = 8						; size = 4
_pool$ = 8						; size = 4
_bk_destroy_pool PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 456
	push	ecx
; Line 458
	mov	ecx, DWORD PTR _pool$[esp]
; Line 461
	push	16384					; 00004000H
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _base$[esp+8], eax
	mov	eax, DWORD PTR [ecx+8]
	mov	DWORD PTR _size$[esp+4], eax
	lea	eax, DWORD PTR _size$[esp+4]
	push	eax
	lea	eax, DWORD PTR _base$[esp+12]
	push	eax
	call	_NtCurrentProcess@0
	push	eax
	call	_NtFreeVirtualMemory@16
; Line 462
	test	eax, eax
	je	SHORT $LN2@bk_destroy
; Line 463
	push	eax
	push	OFFSET ??_C@_0BL@IGHJCLMM@NtFreeVirtualMemory?3?50x?$CFx?6@
	call	_printf
	add	esp, 8
$LN2@bk_destroy:
; Line 466
	pop	ecx
	ret	0
_bk_destroy_pool ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _bk_pool_create
_TEXT	SEGMENT
_base$ = -4						; size = 4
_pool$ = 8						; size = 4
_num_blocks$ = 12					; size = 4
_pool_size$ = 16					; size = 4
_block_size$ = 16					; size = 4
_bk_pool_create PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 430
	push	ecx
; Line 435
	mov	ecx, DWORD PTR _block_size$[esp]
	push	esi
	push	edi
	call	@next_pow2@4
; Line 436
	mov	ecx, DWORD PTR _num_blocks$[esp+8]
	mov	edi, eax
	call	@next_pow2@4
	mov	esi, eax
; Line 437
	mov	ecx, esi
	imul	ecx, edi
; Line 438
	push	ecx
	push	OFFSET ??_C@_0P@EJBNOLOH@pool_size?3?5?$CFu?6@
	mov	DWORD PTR _pool_size$[esp+16], ecx
	call	_printf
	add	esp, 8
; Line 441
	lea	eax, DWORD PTR _pool_size$[esp+8]
	push	4
	push	12288					; 00003000H
	push	eax
	push	0
	lea	eax, DWORD PTR _base$[esp+28]
	push	eax
	call	_NtCurrentProcess@0
	push	eax
	call	_NtAllocateVirtualMemory@24
; Line 443
	push	eax
	push	OFFSET ??_C@_0BP@KJLECNDD@NtAllocateVirtualMemory?3?50x?$CFx?6@
	call	_printf
; Line 446
	mov	eax, DWORD PTR _pool$[esp+16]
	add	esp, 8
	mov	DWORD PTR [eax+12], edi
; Line 451
	pop	edi
	mov	DWORD PTR [eax+16], esi
	mov	DWORD PTR [eax+20], esi
	mov	DWORD PTR [eax+24], 0
	mov	DWORD PTR [eax+28], 0
	pop	esi
; Line 452
	pop	ecx
	ret	0
_bk_pool_create ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _create_pool_factory
_TEXT	SEGMENT
_size$ = -8						; size = 4
_base$ = -4						; size = 4
_create_pool_factory PROC				; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 413
	sub	esp, 8
; Line 420
	push	4
	push	8192					; 00002000H
	lea	eax, DWORD PTR _size$[esp+16]
	mov	DWORD PTR _size$[esp+16], 2097152	; 00200000H
	push	eax
	push	0
	lea	eax, DWORD PTR _base$[esp+24]
	push	eax
	call	_NtCurrentProcess@0
	push	eax
	call	_NtAllocateVirtualMemory@24
; Line 422
	mov	eax, DWORD PTR _base$[esp+8]
	mov	DWORD PTR ?factory@?1??create_pool_factory@@9@9, eax
; Line 423
	mov	DWORD PTR ?factory@?1??create_pool_factory@@9@9+4, 32 ; 00000020H
; Line 424
	add	esp, 8
	ret	0
_create_pool_factory ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_alloc_unaligned
_TEXT	SEGMENT
_size$ = 8						; size = 4
_mem_alloc_unaligned PROC				; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 406
	mov	ecx, DWORD PTR _size$[esp-4]
	call	@next_pow2@4
; Line 408
	xor	eax, eax
; Line 409
	ret	0
_mem_alloc_unaligned ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _mem_alloc_aligned
_TEXT	SEGMENT
_mem_alloc_aligned PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 400
	xor	eax, eax
; Line 401
	ret	0
_mem_alloc_aligned ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _windows_register_com_object
_TEXT	SEGMENT
_key_handle$ = -300					; size = 4
_string$ = -296						; size = 8
_oa$ = -288						; size = 24
_rl$ = -264						; size = 4
_buffer$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_windows_register_com_object PROC			; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 363
	sub	esp, 300				; 0000012cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+300], eax
	xorps	xmm0, xmm0
; Line 255
	mov	eax, OFFSET ??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@
; Line 365
	movups	XMMWORD PTR _oa$[esp+300], xmm0
	movq	QWORD PTR _oa$[esp+316], xmm0
$LL4@windows_re:
; Line 256
	movzx	ecx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL4@windows_re
; Line 257
	sub	eax, OFFSET ??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@
; Line 259
	mov	DWORD PTR _string$[esp+304], OFFSET ??_C@_1GE@CKCJJBDN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@
	sar	eax, 1
; Line 374
	mov	DWORD PTR _oa$[esp+300], 24		; 00000018H
; Line 375
	mov	DWORD PTR _oa$[esp+304], 0
; Line 377
	mov	DWORD PTR _oa$[esp+312], 0
; Line 257
	lea	eax, DWORD PTR [eax*2-2]
; Line 378
	mov	DWORD PTR _oa$[esp+316], 0
; Line 257
	mov	WORD PTR _string$[esp+300], ax
; Line 258
	mov	WORD PTR _string$[esp+302], ax
; Line 376
	lea	eax, DWORD PTR _string$[esp+300]
	mov	DWORD PTR _oa$[esp+308], eax
; Line 383
	lea	eax, DWORD PTR _oa$[esp+300]
	push	eax
	push	1
	lea	eax, DWORD PTR _key_handle$[esp+308]
	mov	DWORD PTR _oa$[esp+328], 0
	push	eax
	mov	DWORD PTR _key_handle$[esp+312], 0
	call	_NtOpenKey@12
; Line 384
	push	DWORD PTR _key_handle$[esp+300]
	push	eax
	push	OFFSET ??_C@_0BP@DNDKCCKF@Status?3?50x?$CFx?6Key?5Handle?3?50x?$CFx?6@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 255
	mov	ecx, OFFSET ??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@
$LL8@windows_re:
; Line 256
	movzx	eax, WORD PTR [ecx]
	add	ecx, 2
	test	ax, ax
	jne	SHORT $LL8@windows_re
; Line 257
	sub	ecx, OFFSET ??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@
; Line 259
	mov	DWORD PTR _string$[esp+304], OFFSET ??_C@_19PBDICKGO@?$AAH?$AAo?$AAs?$AAt@
	sar	ecx, 1
	lea	eax, DWORD PTR [ecx*2-2]
	mov	WORD PTR _string$[esp+300], ax
	mov	WORD PTR _string$[esp+302], ax
; Line 391
	lea	eax, DWORD PTR _rl$[esp+300]
	push	eax
	push	256					; 00000100H
	lea	eax, DWORD PTR _buffer$[esp+308]
	push	eax
	push	2
	lea	eax, DWORD PTR _string$[esp+316]
	push	eax
	push	DWORD PTR _key_handle$[esp+320]
	call	_NtQueryValueKey@24
; Line 392
	push	eax
	push	OFFSET ??_C@_0BH@OEGPOLCA@NtQueryValueKey?3?50x?$CFx?6@
	call	_printf
; Line 394
	lea	eax, DWORD PTR _buffer$[esp+320]
	push	eax
	push	DWORD PTR _buffer$[esp+320]
	push	OFFSET ??_C@_1BI@FMNPLDCI@?$AAD?$AAa?$AAt?$AAa?$AA?3?$AA?5?$AA?$CF?$AA?4?$AA?$CK?$AAs?$AA?6@
	call	_wprintf
; Line 395
	mov	ecx, DWORD PTR __$ArrayPad$[esp+320]
	add	esp, 20					; 00000014H
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	ret	0
_windows_register_com_object ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _second_pass
_TEXT	SEGMENT
_data$ = 8						; size = 4
_str$ = 12						; size = 4
_numwritten$ = 16					; size = 4
_count$ = 16						; size = 4
_second_pass PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 217
	push	ebx
; Line 222
	mov	ebx, DWORD PTR _count$[esp]
	mov	ecx, ebx
	push	ebp
	mov	ebp, DWORD PTR _data$[esp+4]
	push	esi
	mov	esi, DWORD PTR _str$[esp+8]
	mov	edx, esi
	push	edi
	mov	eax, DWORD PTR [ebp+16]
	push	0
	call	eax
; Line 224
	push	ebx
	push	esi
	push	OFFSET _linebuffer
	mov	edi, eax
	call	_memcpy
; Line 226
	mov	ecx, DWORD PTR [ebp+8]
	lea	esi, DWORD PTR _linebuffer[ebx]
	sub	ecx, ebx
	push	ecx
	push	OFFSET _spaces
	push	esi
	call	_memcpy
; Line 227
	mov	eax, DWORD PTR [ebp+8]
; Line 229
	xor	edx, edx
	sub	eax, ebx
	add	esi, eax
	mov	eax, edi
	div	DWORD PTR [ebp+4]
	push	edx
	push	edi
	push	ebx
	push	OFFSET ??_C@_0BD@LBIACFDM@?5?$HM?5?$CFu?5?$HM?50x?$CFp?5?$HM?5?$CFu?6@
	push	esi
	call	_sprintf
	add	esi, eax
; Line 232
	push	OFFSET _linebuffer
	sub	esi, OFFSET _linebuffer
	push	esi
	push	OFFSET ??_C@_04EBNJJJJI@?$CF?4?$CKs@
	call	_printf
	add	esp, 56					; 00000038H
; Line 233
	lea	eax, DWORD PTR _numwritten$[esp+12]
	push	0
	push	eax
	push	esi
	push	OFFSET _linebuffer
	push	DWORD PTR [ebp]
	call	DWORD PTR __imp__WriteFile@20
	pop	edi
	pop	esi
	pop	ebp
	pop	ebx
; Line 234
	ret	0
_second_pass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _first_pass
_TEXT	SEGMENT
_data$ = 8						; size = 4
_str$ = 12						; size = 4
_count$ = 16						; size = 4
_first_pass PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 208
	mov	eax, DWORD PTR _data$[esp-4]
	mov	ecx, DWORD PTR _count$[esp-4]
	inc	DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR [eax+8]
	jbe	SHORT $LN2@first_pass
; Line 209
	mov	DWORD PTR [eax+8], ecx
$LN2@first_pass:
; Line 212
	ret	0
_first_pass ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _foreach_line
_TEXT	SEGMENT
_eof$1$ = 8						; size = 4
_strptr$ = 8						; size = 4
_length$ = 12						; size = 4
_callback$ = 16						; size = 4
_ctx$ = 20						; size = 4
_foreach_line PROC					; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 166
	mov	eax, DWORD PTR _length$[esp-4]
	push	esi
	mov	esi, DWORD PTR _strptr$[esp]
	add	eax, esi
	mov	DWORD PTR _eof$1$[esp], eax
	mov	ecx, esi
; Line 168
	cmp	esi, eax
	je	SHORT $LN3@foreach_li
	push	ebx
	mov	ebx, DWORD PTR _ctx$[esp+4]
	push	ebp
	mov	ebp, DWORD PTR _callback$[esp+8]
	push	edi
$LL2@foreach_li:
; Line 169
	mov	al, BYTE PTR [esi]
	cmp	al, 13					; 0000000dH
	jne	SHORT $LN4@foreach_li
; Line 170
	mov	eax, esi
	sub	eax, ecx
; Line 171
	push	eax
	push	ecx
	push	ebx
	call	ebp
	add	esp, 12					; 0000000cH
; Line 172
	add	esi, 2
; Line 173
	mov	ecx, esi
; Line 174
	jmp	SHORT $LN7@foreach_li
$LN4@foreach_li:
; Line 175
	lea	edi, DWORD PTR [esi+1]
	cmp	al, 10					; 0000000aH
	jne	SHORT $LN6@foreach_li
; Line 176
	sub	esi, ecx
; Line 177
	push	esi
	push	ecx
	push	ebx
	call	ebp
; Line 178
	mov	esi, edi
	add	esp, 12					; 0000000cH
; Line 179
	mov	ecx, esi
; Line 180
	jmp	SHORT $LN7@foreach_li
$LN6@foreach_li:
; Line 182
	mov	esi, edi
$LN7@foreach_li:
; Line 168
	cmp	esi, DWORD PTR _eof$1$[esp+12]
	jne	SHORT $LL2@foreach_li
	pop	edi
	pop	ebp
	pop	ebx
$LN3@foreach_li:
	pop	esi
; Line 185
	ret	0
_foreach_line ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_hash_value_reentry_equality
_TEXT	SEGMENT
_c_proc$ = 8						; size = 4
_asm_proc$ = 12						; size = 4
_hash$ = 16						; size = 4
_test_hash_value_reentry_equality PROC			; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 139
	push	ebx
	push	esi
; Line 144
	push	DWORD PTR _hash$[esp+4]
	mov	esi, DWORD PTR _c_proc$[esp+8]
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 2
	call	esi
; Line 145
	push	eax
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@+2
	mov	ecx, 2
	call	esi
; Line 147
	push	DWORD PTR _hash$[esp+4]
	mov	esi, DWORD PTR _asm_proc$[esp+8]
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 2
	mov	ebx, eax
	call	esi
; Line 148
	push	eax
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@+2
	mov	ecx, 2
	call	esi
	mov	esi, eax
; Line 150
	push	esi
	push	ebx
	push	OFFSET ??_C@_0CM@JMKCLPKH@test_hash_value_reentry_equalit@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 151
	xor	eax, eax
	cmp	ebx, esi
	sete	al
	pop	esi
	pop	ebx
; Line 152
	ret	0
_test_hash_value_reentry_equality ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _test_hash_value_equality
_TEXT	SEGMENT
_c_proc$ = 8						; size = 4
_asm_proc$ = 12						; size = 4
_hash$ = 16						; size = 4
_test_hash_value_equality PROC				; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 122
	push	esi
; Line 129
	mov	esi, DWORD PTR _hash$[esp]
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	push	edi
	push	esi
	mov	ecx, 4
	call	DWORD PTR _c_proc$[esp+8]
; Line 130
	push	esi
	mov	edx, OFFSET ??_C@_04OIKJMBFP@TEST@
	mov	ecx, 4
	mov	edi, eax
	call	DWORD PTR _asm_proc$[esp+8]
	mov	esi, eax
; Line 132
	push	esi
	push	edi
	push	OFFSET ??_C@_0CE@LLELPOEN@test_hash_value_equality?3?5?$CFu?5?$DN?$DN@
	call	_printf
	add	esp, 12					; 0000000cH
; Line 133
	xor	eax, eax
	cmp	edi, esi
	sete	al
	pop	edi
	pop	esi
; Line 134
	ret	0
_test_hash_value_equality ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RunTest
_TEXT	SEGMENT
_ut$ = 8						; size = 4
_RunTest PROC						; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 86
	ret	0
_RunTest ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hash_pjw_32@8
_TEXT	SEGMENT
@hash_pjw_32@8 PROC					; COMDAT
; _key$ = ecx
; _length$ = edx
; File h:\dev\hash-tool\hash.c
; Line 126
	xor	eax, eax
; Line 127
	ret	0
@hash_pjw_32@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hash_rs_32@8
_TEXT	SEGMENT
@hash_rs_32@8 PROC					; COMDAT
; _key$ = ecx
; _length$ = edx
; File h:\dev\hash-tool\hash.c
; Line 101
	push	ebx
	push	esi
; Line 105
	xor	eax, eax
	xor	esi, esi
	mov	ebx, ecx
	push	edi
	mov	edi, 63689				; 0000f8c9H
; Line 106
	test	edx, edx
	je	SHORT $LN3@
$LL7@:
; Line 108
	movzx	ecx, BYTE PTR [esi+ebx]
; Line 110
	inc	esi
	imul	eax, edi
	imul	edi, edi, 378551
	add	eax, ecx
	cmp	esi, edx
	jb	SHORT $LL7@
$LN3@:
	pop	edi
; Line 113
	pop	esi
	pop	ebx
	ret	0
@hash_rs_32@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hashb_jenkins1_2@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@hashb_jenkins1_2@12 PROC				; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 83
	mov	eax, DWORD PTR _hash$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx
	xor	esi, esi
	test	edi, edi
	je	SHORT $LN3@
	npad	2
$LL7@:
; Line 84
	movsx	ecx, BYTE PTR [esi+edx]
	inc	esi
; Line 85
	add	ecx, eax
	imul	eax, ecx, 1025
; Line 86
	mov	ecx, eax
	shr	ecx, 6
	xor	eax, ecx
	cmp	esi, edi
	jne	SHORT $LL7@
$LN3@:
; Line 88
	lea	ecx, DWORD PTR [eax+eax*8]
; Line 89
	mov	eax, ecx
	shr	eax, 11					; 0000000bH
	xor	eax, ecx
; Line 91
	pop	edi
	imul	eax, eax, 32769
	pop	esi
; Line 92
	ret	4
@hashb_jenkins1_2@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hashb_jenkins1_1@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@hashb_jenkins1_1@12 PROC				; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 70
	mov	eax, DWORD PTR _hash$[esp-4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	xor	esi, esi
	mov	ebx, edx
	test	edi, edi
	je	SHORT $LN3@
$LL7@:
; Line 71
	movsx	edx, BYTE PTR [esi+ebx]
	mov	ecx, eax
	shl	ecx, 10					; 0000000aH
	inc	esi
	add	edx, ecx
	mov	ecx, eax
	shr	ecx, 6
	xor	edx, ecx
	add	eax, edx
	cmp	esi, edi
	jne	SHORT $LL7@
$LN3@:
; Line 73
	mov	edx, eax
	mov	ecx, eax
	shr	edx, 11					; 0000000bH
	shl	ecx, 15					; 0000000fH
	add	edx, ecx
	lea	ecx, DWORD PTR [eax*8]
; Line 74
	pop	edi
	xor	edx, ecx
	pop	esi
	add	eax, edx
	pop	ebx
; Line 75
	ret	4
@hashb_jenkins1_1@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @fnv1_64@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@fnv1_64@12 PROC					; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 61
	mov	eax, DWORD PTR _hash$[esp-4]
; Line 62
	ret	4
@fnv1_64@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @fnv1_32@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@fnv1_32@12 PROC					; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 53
	mov	eax, DWORD PTR _hash$[esp-4]
; Line 54
	ret	4
@fnv1_32@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hash_wakkerbot_32@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@hash_wakkerbot_32@12 PROC				; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 43
	mov	eax, DWORD PTR _hash$[esp-4]
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	xor	esi, esi
	mov	ebx, edx
	test	edi, edi
	jle	SHORT $LN3@
$LL8@:
; Line 44
	movsx	ecx, BYTE PTR [esi+ebx]
	mov	edx, eax
	shl	edx, 8
	inc	esi
	xor	edx, eax
	shl	edx, 5
	xor	edx, ecx
	mov	ecx, eax
	shr	ecx, 2
	xor	edx, ecx
	xor	eax, edx
	xor	eax, -2147477503			; 80001801H
	cmp	esi, edi
	jl	SHORT $LL8@
$LN3@:
	pop	edi
; Line 46
	pop	esi
	pop	ebx
	ret	4
@hash_wakkerbot_32@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _hash_loseLose
_TEXT	SEGMENT
_length$ = 8						; size = 4
_key$ = 12						; size = 4
_hash$ = 16						; size = 4
_hash_loseLose PROC					; COMDAT
; File h:\dev\hash-tool\hash.c
; Line 33
	ret	0
_hash_loseLose ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hash_sdbm_32@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@hash_sdbm_32@12 PROC					; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 19
	mov	eax, DWORD PTR _hash$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx
	xor	esi, esi
	test	edi, edi
	jle	SHORT $LN3@
	npad	2
$LL8@:
; Line 20
	movsx	ecx, BYTE PTR [esi+edx]
	inc	esi
	imul	eax, eax, 65599
	add	eax, ecx
	cmp	esi, edi
	jl	SHORT $LL8@
$LN3@:
	pop	edi
; Line 22
	pop	esi
	ret	4
@hash_sdbm_32@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT @hash_djb2_32@12
_TEXT	SEGMENT
_hash$ = 8						; size = 4
@hash_djb2_32@12 PROC					; COMDAT
; _length$ = ecx
; _key$ = edx
; File h:\dev\hash-tool\hash.c
; Line 8
	push	ebx
	mov	ebx, edx
	mov	edx, ecx
	push	esi
; Line 9
	xor	esi, esi
	test	edx, edx
	jle	SHORT $LN12@
	push	edi
	mov	edi, DWORD PTR _hash$[esp+8]
$LL8@:
; Line 10
	movsx	ecx, BYTE PTR [esi+ebx]
	mov	eax, edi
	shl	eax, 5
	inc	esi
	add	edi, eax
	xor	edi, ecx
	cmp	esi, edx
	jl	SHORT $LL8@
; Line 11
	mov	eax, edi
	pop	edi
	pop	esi
; Line 12
	pop	ebx
	ret	4
$LN12@:
; Line 11
	mov	eax, DWORD PTR _hash$[esp+4]
	pop	esi
; Line 12
	pop	ebx
	ret	4
@hash_djb2_32@12 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _RtlInitUnicodeString@8
_TEXT	SEGMENT
_OutString$ = 8						; size = 4
_InString$ = 12						; size = 4
_RtlInitUnicodeString@8 PROC				; COMDAT
; File h:\dev\hash-tool\hash-tool.c
; Line 255
	mov	edx, DWORD PTR _InString$[esp-4]
	mov	eax, edx
$LL2@RtlInitUni:
; Line 256
	movzx	ecx, WORD PTR [eax]
	add	eax, 2
	test	cx, cx
	jne	SHORT $LL2@RtlInitUni
; Line 257
	mov	ecx, DWORD PTR _OutString$[esp-4]
	sub	eax, edx
	sar	eax, 1
; Line 259
	mov	DWORD PTR [ecx+4], edx
	lea	eax, DWORD PTR [eax*2-2]
	mov	WORD PTR [ecx], ax
	mov	WORD PTR [ecx+2], ax
; Line 260
	ret	8
_RtlInitUnicodeString@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 1390
	lea	eax, DWORD PTR __Format$[esp]
	push	eax
	push	0
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	___stdio_common_vsprintf
; Line 1394
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1793
	ret	0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 1390
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	-1
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	___stdio_common_vsprintf
; Line 1394
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1464
	ret	0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 1390
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __BufferCount$[esp+8]
	push	DWORD PTR __Buffer$[esp+12]
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	push	DWORD PTR [eax+4]
	or	ecx, 1
	push	ecx
	call	___stdio_common_vsprintf
; Line 1394
	or	ecx, -1
	add	esp, 28					; 0000001cH
	test	eax, eax
	cmovs	eax, ecx
; Line 1395
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	esi
; Line 958
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
; Line 643
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 960
	pop	esi
; Line 961
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 643
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _wprintf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_wprintf PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
; Line 611
	push	esi
; Line 615
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
; Line 306
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfwprintf
	add	esp, 24					; 00000018H
; Line 617
	pop	esi
; Line 618
	ret	0
_wprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfwprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfwprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_wstdio.h
; Line 306
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfwprintf
	add	esp, 24					; 00000018H
; Line 307
	ret	0
__vfwprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
